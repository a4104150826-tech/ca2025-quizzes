leetcode 190. Reverse Bits c code
version1:
int reverseBits(int n) {
    int x = n>>24;
    int y = n>>16;
    int z = n>>8;
    int u = n;
    x = x&0xff;
    y = y&0xff;
    z = z&0xff;
    u = u&0xff;
    int t = 0;
    int s = 0;
    int p = 0;
    int q = 0;
    for(int i =0;i<8;i++){
        int bit;
        int v = 1;
        bit= x&v;
        x>>=1;
        bit <<=(7-i);
        t|=bit;
    }
    x =t;
      for(int i =0;i<8;i++){
         int bit;
        int v = 1;
        bit= y&v;
        y>>=1;
        bit <<=(7-i);
        s|=bit;
    }
    y =s;
      for(int i =0;i<8;i++){
        int bit;
        int v = 1;
        bit = z&v;
        z>>=1;
        bit <<=(7-i);
        p|=bit;
    }
    z=p;
      for(int i =0;i<8;i++){
        int bit;
        int v = 1;
        bit= u&v;
        u>>=1;
        bit <<=(7-i);
        q|=bit;
    }   
    u = q;
    u<<=24;
    z<<=16;
    y<<=8;
int answer =  x+y+z+u;
return answer;

}
version 2:
int reverseBits(int n) {
    int t=0;
    u_int u = (u_int) n;
for(int i = 0;i<32;i++){
    int bit;
    bit = u&1;
    u>>=1;
    bit<<=(31-i);
    t|=bit;
}
u =t;
n = u;
return n;
version 3:
int reverseBits(int n) {
n= (n&0x55555555u)<<1|(n>>1)&0x55555555u;
n = (n&0x33333333u)<<2|(n>>2)&0x33333333u;
n = (n&0x0f0f0f0fu)<<4|(n>>4)&0x0f0f0f0fu;
n = (n&0x00ff00ffu)<<8|(n>>8)&0x00ff00ffu;
n = (n&0x0000ffff)<<16|(n>>16)&0x0000ffff;
return n;
}
